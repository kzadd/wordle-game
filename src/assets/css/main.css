@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --absent-character-box-bg-color: #939b9f;
  --animation-speed-fast: 250ms;
  --animation-speed: 1000ms;
  --correct-character-box-bg-color: #66a060;
  --default-character-box-bg-color: theme('colors.white');
  --default-character-box-border-color: theme('colors.black');
  --default-character-box-border: solid 2px;
  --default-character-box-text-color: theme('colors.black');
  --present-character-box-bg-color: #ceb02c;
}

.dark {
  --default-character-box-bg-color: theme('colors.white');
  --correct-character-box-bg-color: #6aaa64;
}

.character-box-fill-animation {
  animation: onCharacterBox linear;
  animation-duration: 0.35s;
}

.character-box-reveal {
  animation-duration: 0.35s;
  animation-timing-function: linear;
  animation-fill-mode: backwards;
}
.character-box-reveal > .letter-container {
  animation: offsetLetterFlip 0.35s linear;
  animation-fill-mode: backwards;
}

.character-box-reveal.absent {
  animation-name: revealAbsentCharCell;
}

.character-box-reveal.correct {
  animation-name: revealCorrectCharCell;
}

.character-box-reveal.present {
  animation-name: revealPresentCharCell;
}

@keyframes revealAbsentCharCell {
  0% {
    background-color: var(--default-character-box-bg-color);
    border-color: var(--default-character-box-border-color);
    border: var(--default-character-box-border);
    color: var(--default-character-box-text-color);
    transform: rotateX(0deg);
  }
  50% {
    background-color: var(--default-character-box-bg-color);
    border-color: var(--default-character-box-border-color);
    border: var(--default-character-box-border);
  }
  50.1% {
    background-color: var(--absent-character-box-bg-color);
    border-color: var(--absent-character-box-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealCorrectCharCell {
  0% {
    background-color: var(--default-character-box-bg-color);
    border-color: var(--default-character-box-border-color);
    border: var(--default-character-box-border);
    color: var(--default-character-box-text-color);
    transform: rotateX(0deg);
  }
  50% {
    background-color: var(--default-character-box-bg-color);
    border-color: var(--default-character-box-border-color);
    border: var(--default-character-box-border);
  }
  50.1% {
    background-color: var(--correct-character-box-bg-color);
    border-color: var(--correct-character-box-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealPresentCharCell {
  0% {
    background-color: var(--default-character-box-bg-color);
    border-color: var(--default-character-box-border-color);
    border: var(--default-character-box-border);
    color: var(--default-character-box-text-color);
    transform: rotateX(0deg);
  }
  50% {
    background-color: var(--default-character-box-bg-color);
    border-color: var(--default-character-box-border-color);
    border: var(--default-character-box-border);
  }
  50.1% {
    background-color: var(--present-character-box-bg-color);
    border-color: var(--present-character-box-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes offsetLetterFlip {
  0% {
    transform: rotateX(0deg);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes onCharacterBox {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }

  100% {
    transform: scale(1);
  }
}
